= Installation instructions =

These instructions are intended to enable a developer to setup a development enviroment for the purposes of:

 * running the jsHub code on a local machine
 * running the jsHub Unit Tests in a local web browser
 
== Getting the code ==

The lasted release of the JsHub code is made available for download at:

  http://jshub.org/download/

=== Git repositories ===

If you have Git installed you can clone from the following URLs, depending on whether or not you have been given committer access by the project administrators:

  git clone https://jshub.org/git/jshub-core.git (Read-only)
  git clone git@jshub.org:jshub-core.git (Read-write)

== Development enviroment ==

The jsHub core app is a standard Ruby on Rails 2.3 application.

To run automated Unit Tests and optionally use the results with a Continious Integration server, Java is also required.

=== Supported operating systems ===

Development is regularly undertaken on the following:

 * Mac OS X 10.5 Leopard (x86) 
 * CentOS 5 (x86)
 * Ubuntu Linux 8.04 (x86)
 
The following instructions are using Mac OS X 10.5 as the host operating system and should be applicable to other Linux or UNIX based distributions.

Windows platforms are not explictly tested, however as Ruby on Rails and Java are available, installation should also be possible.

== Setting up the environment ==

Mac OS X 10.5 comes pre-installed with many of the necessary languages and libraries for Ruby on Rails development, but at the time of this writing these a quite out-of-date when initially installed.

It is recommended that the OS is updated to the latest available from Apple using the Software Update application.

=== Environment for javascript development ===

Currently development is undertaken on Mac OS X 10.5.7 with the following versions:

 * Ruby version     - ruby 1.8.6 (2008-08-11 patchlevel 287) [universal-darwin9.0]
                      Please note jsHub is not currently tested on Ruby v1.9
 * RubyGems version - 1.3.1
 * Rails version    - Rails 2.3.2

The easiest way to get the latest versions of RubyGems and Rails is to run the following commands in the Terminal, (you will be prompted for your user password):

  $ sudo gem update --system
  $ sudo gem upgrade

=== Environment for running automated tests ===
 
Running of headless Unit Tests (rather than in a web browser) uses Rhino and requires a Java Runtime Environment.

Currently development is undertaken on Mac OS X 10.5.7 with the following version:

 * Java version     - java version "1.6.0_13"
                      Java(TM) SE Runtime Environment (build 1.6.0_13-b03-211)
                      Java HotSpot(TM) 64-Bit Server VM (build 11.3-b02-83, mixed mode)
                      
=== Environment for contributing to the project ===
                   
If you wish to contribute back to the project you will also require Git (similar to SVN/CVS) to checkout the latest code and generate patches for submission.

Most operating systems have a downloadable binary installer or package in their management system.

For Mac OS X 10.5.7 we recommend the Git for OS X installer from http://code.google.com/p/git-osx-installer/ which installs the following:

 * Git version      - git version 1.6.0.2
 
there is also a useful GUI called 'GitX' at http://gitx.frim.nl/

=== Gem dependencies ===

The application requires a number of gems to be present.

A list of these with their install status can be determined by running, from the root of the application:

  $ rake gems

To install mising gems run:

  $ rake gems:install

== Running the application ==

Setup the database:

  $ rake db:migrate

To run the application use:

  $ ./script/server

you can now access the application on http://localhost:3000/ (by default)

=== Running under Phusion Passenger ===

Phusion Passenger integrates Rails applications with the Apache web server, and in particular allows for multiple Rails applications to be hosted easily under one domain name using URLs rather than virtual hosts.

For installation instructions please see the Phusion Passenger website and section on Sub-URIs:

 * http://www.modrails.com/install.html
 * http://www.modrails.com/documentation/Users%20guide.html#deploying_rails_to_sub_uri
 
The jsHub application comes preconfigured to run on the URL '/core/' and this can be changed in the 'environments/passenger.rb file.

Below is a sample Apache configuration:

<VirtualHost *:80>
  ServerName localhost
  DocumentRoot /Library/WebServer/Documents/jshub-core
  RailsEnv passenger
  RailsBaseURI /core
</VirtualHost>

== Running Unit Tests in a browser ==

The application comes with a set of comprehensive test pages that can be run in a web browser:

 * http://localhost:3000/test/unit

Each page submits its results to a local database, also identifing the browser used, so that the Unit Test pages can be run from any other local machines with web browsers installed as part of a cross-browser test suite:

 * http://localhost:3000/test/results

== Using the application ==

For further information on:

 * creating and testing jsHub data-capture and transport plug-ins
 * contributing additional code, bug fixes and Unit Tests

Please refer to the online Help pages at http://localhost:3000/help/