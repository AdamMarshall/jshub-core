<% set_title "setVariable < External API < Flash" %>

<% content_for :javascripts do %>  

<!-- jsHub tag files -->
<%= javascript_include_tag "/../phploader/combo?jshub_1.0.0/build/jshub/jshub-min.js" %>

<script type="text/javascript">
  YUI().use('jshub', function(Y, result) {
    if (!result.success) {
        Y.log('Load failure: ' + result.msg, 'warn', 'jsHub');
    } else {
        Y.log('Loaded: jsHub', 'info', 'jsHub');
    }
  });
</script>

<% end %>

<% content_for :intro do %>
<p>
  This file tests <strong><a href="http://www.adobe.com/devnet/flash/articles/external_interface.html" title="Flash External API">Flash External API</a> event listening functionality</strong>.
</p>
<p>
  This page tests that events can be passed from the Flash file to the HTML page and its JavaScript code via <strong>setVariable()</strong>.
</p>
<% end %>


<script language="javascript" type="text/javascript">
  /* 
   * Check the browser environment for required JS libraries and other
   * supporting functionality to avoid false test failure results due to
   * mis-configuration, etc
   */
  suite.add(new Y.Test.Case({
    name: "Environment check",
    
    "test required test dependencies": function() {
      Y.Assert.isNotUndefined(window.YUI, "The YUI library is required");
      Y.Assert.isNotUndefined(window.jsHub, "The jsHub hub is required");
    },
    
    "test jsHub API dependencies": function() {
      Y.Assert.isFunction(jsHub.bind, "jsHub.bind() is not a Function");
      Y.Assert.isFunction(jsHub.trigger, "jsHub.trigger() is not a Function");
      Y.Assert.isFunction(jsHub.safe, "jsHub.safe() is not a Function");
    }
  }));
  
  // Async tests to interact with Flash cannot run in Rhino
  if (!navigator.userAgent.match(/Rhino/)){   
  } // end check for Rhino
  
</script>  

<!-- Any HTML you may require for your tests to work properly -->
<div id="example1">

  <% 
    # since paths are duplicated depending on browsers set and use a local variable to avoid bugs
    path_to_swf = '../../../test_assets/vendor/adobe/flash/setVariable.swf' 
  %>

  <script type="text/javascript">
    // this function is called from the form in the page
    function callJavascript(str){
      var sendText = document.forms.inputValue.vars.value;
      window.document.myMovie.SetVariable("testValue", sendText);
    }
  </script>

  <!--url's used in the movie-->
  <!--text used in the movie-->
  <object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0" width="550" height="400" id="myMovie" align="middle">
    <param name="allowScriptAccess" value="sameDomain" />
    <param name="movie" value="<%= path_to_swf %>" />
    <param name="quality" value="high" />
    <param name="bgcolor" value="#ffffff" />
    <embed src="<%= path_to_swf %>" quality="high" bgcolor="#ffffff" width="550" height="400" name="myMovie" align="middle" allowScriptAccess="sameDomain" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" />
  </object>
  
  <form name="inputValue">
    <p>
      Value <input type="text" name="vars" size="50" value="text for movie" />
      <input type=button value="Pass the variable to Flash" onClick="callJavascript(); return false;" />
    </p>
  </form>  
</div>

